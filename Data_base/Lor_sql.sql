CREATE TABLE "users" (
    user_id INTEGER PRIMARY KEY,
    full_name TEXT,
    username TEXT
);

CREATE TABLE "tasks" (
    task_id             INTEGER PRIMARY KEY AUTOINCREMENT, -- Уникальный ID задачи
    short_description   TEXT NOT NULL,                     -- Краткое описание задачи
    description         TEXT,                              -- Полное описание того, что нужно сделать
    deadline            DATE                               -- Дедлайн в стандартном формате ГГГГ-ММ-ДД
);

CREATE TABLE "user_tasks" (
    user_id INTEGER NOT NULL,
    task_id INTEGER NOT NULL,
    PRIMARY KEY (user_id, task_id), -- Составной первичный ключ
    FOREIGN KEY (user_id) REFERENCES "users" (user_id) ON DELETE CASCADE,
    FOREIGN KEY (task_id) REFERENCES "tasks" (task_id) ON DELETE CASCADE
);

Заполнение тестовыми данными
INSERT INTO "users" (user_id, full_name, username, is_admin) VALUES
(245162546, 'Vlad Vershinin', 'Vlad_1549', TRUE),
(683852062, 'Дмитрий', 'dmitryf96', FALSE),
(702173411, 'Дмитрий', '', FALSE);

-- Добавление задач
-- Даты дедлайнов указаны в формате 'ГГГГ-ММ-ДД', подходящем для типа DATE
INSERT INTO "tasks" (task_id, short_description, description, deadline) VALUES
(101, 'Завершить отчет по проекту', 'Подготовить и сдать финальный отчет по проекту "Альфа" до конца недели.', '2025-08-10'),
(102, 'Разработать новую функцию', 'Реализовать функцию импорта данных из CSV-файлов для модуля "Статистика".', '2025-08-20'),
(103, 'Настроить CI/CD пайплайн', 'Оптимизировать и протестировать пайплайн непрерывной интеграции/доставки для нового сервиса.', '2025-09-01');

-- Привязка пользователей к задачам
INSERT INTO "user_tasks" (user_id, task_id) VALUES
-- Задача 101: на одном работнике (Анна Работник)
(2, 101),
-- Задача 102: на двух работниках (Анна Работник и Петр Работник)
(2, 102),
(3, 102),
-- Задача 103: на админе (Иван Администратор)
(1, 103);

--Генерируем задачи Владу
-- Добавление 10 новых задач в таблицу "tasks"
-- Даты дедлайнов указаны в формате 'ГГГГ-ММ-ДД'
INSERT INTO "tasks" (task_id, short_description, description, deadline) VALUES
(104, 'Подготовка к презентации', 'Подготовить слайды и материалы для презентации нового продукта перед руководством.', '2025-08-25'),
(105, 'Обновление API-документации', 'Актуализировать документацию для REST API, добавив описание новых эндпоинтов и примеров запросов.', '2025-08-30'),
(106, 'Анализ пользовательских данных', 'Провести анализ данных о поведении пользователей за последний квартал и подготовить отчет.', '2025-09-05'),
(107, 'Исследование конкурентов', 'Собрать информацию о пяти основных конкурентах, их продуктах и маркетинговых стратегиях.', '2025-09-12'),
(108, 'Рефакторинг кода', 'Оптимизировать и улучшить читаемость кода в модуле авторизации, следуя стандартам PSR-2.', '2025-09-18'),
(109, 'Встреча с командой разработки', 'Запланировать и провести еженедельную встречу для обсуждения статуса текущих задач.', '2025-08-21'),
(110, 'Тестирование нового функционала', 'Протестировать новый функционал корзины на предмет ошибок и удобства использования.', '2025-09-02'),
(111, 'Написание статьи для блога', 'Написать статью на тему "10 советов по оптимизации SQL-запросов" для корпоративного блога.', '2025-09-15'),
(112, 'Разработка прототипа интерфейса', 'Создать кликабельный прототип нового пользовательского интерфейса в Figma.', '2025-09-22'),
(113, 'Планирование спринта', 'Подготовить задачи и расставить приоритеты для следующего двухнедельного спринта.', '2025-08-28');

-- Привязка всех новых задач к пользователю Vlad Vershinin (user_id=245162546)
-- Обратите внимание: здесь используется составной первичный ключ
INSERT INTO "user_tasks" (user_id, task_id) VALUES
(245162546, 104),
(245162546, 105),
(245162546, 106),
(245162546, 107),
(245162546, 108),
(245162546, 109),
(245162546, 110),
(245162546, 111),
(245162546, 112),
(245162546, 113);

#Изменил пользователей на себя, себя и Влада

#Обновил таблицу tasks аргументами, регулирующими статус задачи
-- Добавляем столбец 'completed' с булевым значением для отслеживания завершения задачи.
-- По умолчанию устанавливаем значение FALSE, так как новая задача еще не завершена.
ALTER TABLE "tasks" ADD COLUMN "completed" BOOLEAN DEFAULT FALSE;

-- Добавляем столбец 'is_blocker', который показывает, является ли задача блокирующей.
-- По умолчанию также устанавливаем FALSE.
ALTER TABLE "tasks" ADD COLUMN "is_blocker" BOOLEAN DEFAULT FALSE;

-- Добавляем столбец 'blocker_resolved', который показывает, был ли снят блокер.
-- По умолчанию устанавливаем FALSE.
ALTER TABLE "tasks" ADD COLUMN "blocker_resolved" BOOLEAN DEFAULT FALSE;

#Добавляю таблицу комментариев
CREATE TABLE IF NOT EXISTS "task_comments" (
    comment_id INTEGER PRIMARY KEY AUTOINCREMENT,
    task_id INTEGER NOT NULL,
    author_id INTEGER NOT NULL,
    comment_text TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT (STRFTIME('%Y-%m-%d %H:%M:%S', 'NOW')),
    
    -- ВСЕ ограничения FOREIGN KEY должны быть определены в конце
    FOREIGN KEY (task_id) REFERENCES "tasks" (task_id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES "users" (user_id) ON DELETE CASCADE
);